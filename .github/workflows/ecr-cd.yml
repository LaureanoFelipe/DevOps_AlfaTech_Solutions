name: Continuous Delivery (ECR)

on:
  release:
    types: [published]
  # opcional: rodar manualmente
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  docker-publish:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2                         # <- ajuste
      ECR_REPO: devops_alfatech_solutions
      ECR_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com

    steps:
      - uses: actions/checkout@v4

      # credenciais AWS (para login no ECR)
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # login ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Buildx
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Definir a tag da imagem = tag da release (ex: v1.3.1)
      - name: Compute image tag
        id: tag
        run: |
          echo "TAG=${GITHUB_EVENT_NAME == 'release' && github.event.release.tag_name || 'manual'}" >> $GITHUB_OUTPUT

      # Build + push (apenas uma tag â€” sem latest)
      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.ECR_URI }}/${{ env.ECR_REPO }}:${{ steps.tag.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max